events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=deploy:10m rate=1r/m;

    # Upstream for FastAPI backend
    upstream mcp_backend {
        server mcp-saas-backend:8000;
    }

    server {
        listen 80;
        server_name localhost;

        # Rate limiting
        limit_req zone=api burst=20 nodelay;

        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Health check
        location /health {
            proxy_pass http://mcp_backend;
        }

        # API endpoints
        location /api/ {
            proxy_pass http://mcp_backend/;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # Deploy endpoint with stricter rate limiting
        location /deploy {
            limit_req zone=deploy burst=5 nodelay;
            proxy_pass http://mcp_backend;
            proxy_read_timeout 600s;  # Longer timeout for deployments
            proxy_connect_timeout 75s;
            client_max_body_size 100M;  # Allow larger file uploads
        }

        # SSE streaming endpoints
        location ~ ^/mcp/[^/]+/stream$ {
            proxy_pass http://mcp_backend;
            proxy_buffering off;
            proxy_cache off;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            chunked_transfer_encoding off;
            proxy_read_timeout 24h;
        }

        # Static files (if any)
        location /static/ {
            root /var/www;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # HTTPS server (commented out - uncomment when SSL certs are available)
    # server {
    #     listen 443 ssl;
    #     server_name localhost;

    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;

    #     # Same location blocks as HTTP server
    #     include /etc/nginx/conf.d/locations.conf;
    # }
}
